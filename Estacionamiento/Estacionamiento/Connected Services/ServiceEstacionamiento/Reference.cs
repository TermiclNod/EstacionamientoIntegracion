//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Estacionamiento.ServiceEstacionamiento {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceEstacionamiento.crudEstacionamientoSoap")]
    public interface crudEstacionamientoSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertEstacionamiento", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool InsertEstacionamiento(string comuna, string direccion, string comentario, int id, int valor, string auto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertEstacionamiento", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> InsertEstacionamientoAsync(string comuna, string direccion, string comentario, int id, int valor, string auto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListaEstacionamiendoById", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ListaEstacionamiendoById(int id_usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListaEstacionamiendoById", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ListaEstacionamiendoByIdAsync(int id_usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListaEstacionamientoLibre", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ListaEstacionamientoLibre(int id_usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ListaEstacionamientoLibre", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ListaEstacionamientoLibreAsync(int id_usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EliminaEstacionamiento", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool EliminaEstacionamiento(int id_estacionamiento, int id_usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EliminaEstacionamiento", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> EliminaEstacionamientoAsync(int id_estacionamiento, int id_usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActualizaEstacionamiento", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool ActualizaEstacionamiento(int id_usuario, int id_estacionamiento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActualizaEstacionamiento", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> ActualizaEstacionamientoAsync(int id_usuario, int id_estacionamiento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActualizaEstacionamientoLibre", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool ActualizaEstacionamientoLibre(int id_estacionamiento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ActualizaEstacionamientoLibre", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> ActualizaEstacionamientoLibreAsync(int id_estacionamiento);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface crudEstacionamientoSoapChannel : Estacionamiento.ServiceEstacionamiento.crudEstacionamientoSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class crudEstacionamientoSoapClient : System.ServiceModel.ClientBase<Estacionamiento.ServiceEstacionamiento.crudEstacionamientoSoap>, Estacionamiento.ServiceEstacionamiento.crudEstacionamientoSoap {
        
        public crudEstacionamientoSoapClient() {
        }
        
        public crudEstacionamientoSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public crudEstacionamientoSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public crudEstacionamientoSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public crudEstacionamientoSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool InsertEstacionamiento(string comuna, string direccion, string comentario, int id, int valor, string auto) {
            return base.Channel.InsertEstacionamiento(comuna, direccion, comentario, id, valor, auto);
        }
        
        public System.Threading.Tasks.Task<bool> InsertEstacionamientoAsync(string comuna, string direccion, string comentario, int id, int valor, string auto) {
            return base.Channel.InsertEstacionamientoAsync(comuna, direccion, comentario, id, valor, auto);
        }
        
        public System.Data.DataSet ListaEstacionamiendoById(int id_usuario) {
            return base.Channel.ListaEstacionamiendoById(id_usuario);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ListaEstacionamiendoByIdAsync(int id_usuario) {
            return base.Channel.ListaEstacionamiendoByIdAsync(id_usuario);
        }
        
        public System.Data.DataSet ListaEstacionamientoLibre(int id_usuario) {
            return base.Channel.ListaEstacionamientoLibre(id_usuario);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ListaEstacionamientoLibreAsync(int id_usuario) {
            return base.Channel.ListaEstacionamientoLibreAsync(id_usuario);
        }
        
        public bool EliminaEstacionamiento(int id_estacionamiento, int id_usuario) {
            return base.Channel.EliminaEstacionamiento(id_estacionamiento, id_usuario);
        }
        
        public System.Threading.Tasks.Task<bool> EliminaEstacionamientoAsync(int id_estacionamiento, int id_usuario) {
            return base.Channel.EliminaEstacionamientoAsync(id_estacionamiento, id_usuario);
        }
        
        public bool ActualizaEstacionamiento(int id_usuario, int id_estacionamiento) {
            return base.Channel.ActualizaEstacionamiento(id_usuario, id_estacionamiento);
        }
        
        public System.Threading.Tasks.Task<bool> ActualizaEstacionamientoAsync(int id_usuario, int id_estacionamiento) {
            return base.Channel.ActualizaEstacionamientoAsync(id_usuario, id_estacionamiento);
        }
        
        public bool ActualizaEstacionamientoLibre(int id_estacionamiento) {
            return base.Channel.ActualizaEstacionamientoLibre(id_estacionamiento);
        }
        
        public System.Threading.Tasks.Task<bool> ActualizaEstacionamientoLibreAsync(int id_estacionamiento) {
            return base.Channel.ActualizaEstacionamientoLibreAsync(id_estacionamiento);
        }
    }
}
